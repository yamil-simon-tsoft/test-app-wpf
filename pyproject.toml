[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "test-app-wpf"
version = "1.0.0"
description = "Proyecto de automatizaciÃ³n de pruebas para aplicaciones WPF"
authors = [
    {name = "QA Automation Team", email = "qa@company.com"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.8"
keywords = ["testing", "automation", "wpf", "winappdriver", "gauge", "pytest"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Testing",
    "Topic :: Software Development :: Quality Assurance"
]

dependencies = [
    "pytest>=7.4.0",
    "selenium>=4.15.0",
    "Appium-Python-Client>=3.1.0",
    "getgauge>=0.3.16",
    "allure-pytest>=2.13.0",
    "requests>=2.31.0",
    "pyyaml>=6.0.1",
    "python-dotenv>=1.0.0",
    "colorama>=0.4.6"
]

[project.optional-dependencies]
dev = [
    "black>=23.7.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.4.0"
]
test = [
    "pytest-html>=4.0.0",
    "pytest-xdist>=3.3.0",
    "pytest-mock>=3.11.0",
    "pytest-cov>=4.1.0",
    "factory-boy>=3.3.0",
    "faker>=19.6.0"
]
reporting = [
    "allure-python-commons>=2.13.0",
    "openpyxl>=3.1.0",
    "pandas>=2.1.0"
]

[project.urls]
Homepage = "https://github.com/company/test-app-wpf"
Repository = "https://github.com/company/test-app-wpf.git"
Documentation = "https://github.com/company/test-app-wpf/wiki"
"Bug Tracker" = "https://github.com/company/test-app-wpf/issues"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html:reports/coverage",
    "--html=reports/pytest-report.html",
    "--self-contained-html"
]
testpaths = ["tests"]
markers = [
    "smoke: marks tests as smoke tests (deselect with '-m \"not smoke\"')",
    "regression: marks tests as regression tests",
    "login: marks tests related to login functionality",
    "forms: marks tests related to form functionality",
    "ui: marks tests related to user interface",
    "integration: marks tests as integration tests",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')"
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore:.*unclosed.*:ResourceWarning"
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/__pycache__/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]
known_third_party = ["pytest", "selenium", "appium", "allure"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "appium.*",
    "getgauge.*",
    "allure.*"
]
ignore_missing_imports = true

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503", "E501"]
exclude = [
    ".git",
    "__pycache__",
    "venv",
    ".venv",
    "build",
    "dist",
    ".eggs"
]
